#!/bin/sh

# compare various languages on "fmt" - simple text handling task

# recommended to run "make" instead of this script directly

# List of versions that don't need special handling
PROGS="./fmt /usr/bin/fmt fmt.bash fmt.ksh fmt.pl fmt.py fmt.sh"

# Short version for testing
# PROGS="./fmt /usr/bin/fmt fmt.ksh fmt.pl fmt.py"

# Note: awk and Java treated specially after main loop
# Java, and various *awk impls, easily added on OpenBSD via pkg_add
# On other systems use the provided package installer.

# Pick a time command whose first "word" is the clock time in seconds
# TIME=time
TIME=/usr/bin/time
TMP=$(mktemp /tmp/$0XXXXXXXXX)

(
	for prog in ${PROGS}
		do for size in small medium large
			do echo -n $prog $size; ${TIME} $prog <$size 1>/dev/null # 2>/dev/stdout
		done
	done

	for awk in awk nawk gawk hawk mawk
	do 
		if echo hello|$awk '{print}'>/dev/null 2>&1; then
			for size in small medium large
				do
					echo -n "$awk $size"; ${TIME} $awk -f fmt.awk <$size 1>/dev/null # 2>/dev/stdout
				done
		fi
	done

	if [ -s Fmt.class ]; then
		for size in small medium large
		do
			echo -n 'java(run:class)' $size; ${TIME} java Fmt <$size >/dev/null
			echo -n 'java(run:.java)' $size; ${TIME} java Fmt.java <$size >/dev/null
		done; 
	fi
) > ${TMP} 2>&1

# Now extract the results from make output

awk '
$2=="small"{
	small[$1] = $3
	}
$2=="medium"{
	medium[$1] = $3
	}
$2=="large"{
	large[$1] = $3
	}
END {
	printf "%-15s\t\t%6s\t\t%6s\t\t%6s %s\n", "Language", "2k", "18k", "500k", "(sort col)"
	for (prog in small) {
		printf "%-15s\t\t%6.2f\t\t%6.2f\t\t%6.2f\n", prog, small[prog], medium[prog], large[prog]
	}
}' ${TMP} |sort -rn -k4
